name: Open Dental to Keragon Sync

on:
  schedule:
    - cron: '0 7 * * *'  # Deep sync at 2 AM CDT (7 AM UTC)
    - cron: '0,15,30,45 13-23 * * *'  # Incremental sync 8 AMâ€“8 PM CDT
    - cron: '0,15,30,45 0-1 * * *'  # Incremental sync 8 PM CDT
  workflow_dispatch:

concurrency:
  group: sync-open-dental-to-keragon-${{ github.event_name == 'schedule' && github.event.schedule || 'manual' }}
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Show script version and mtime
        run: |
          echo "## Script file information"
          ls -l sync_script.py || true
          stat sync_script.py || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dateutil

      - name: Find latest patient-cache artifact
        id: find-artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching latest patient-cache artifact"
          ARTIFACT=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts | \
            jq -r '.artifacts | sort_by(.created_at) | reverse | .[] | select(.name == "patient-cache" and .expired == false) | .id' | head -1)
          if [ -n "$ARTIFACT" ]; then
            echo "artifact_id=$ARTIFACT" >> $GITHUB_OUTPUT
            echo "Found patient-cache artifact ID: $ARTIFACT"
          else
            echo "No patient-cache artifact found"
            echo "artifact_id=" >> $GITHUB_OUTPUT
          fi

      - name: Download patient cache
        id: download
        if: steps.find-artifact.outputs.artifact_id != ''
        uses: actions/download-artifact@v4
        with:
          name: patient-cache
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Debug download artifact
        run: |
          echo "## Download artifact status"
          if [ "${{ steps.download.outcome }}" == "success" ]; then
            echo "Successfully downloaded patient-cache artifact"
            ls -l patient_cache.json || echo "patient_cache.json not found after download"
          else
            echo "Failed to download patient-cache artifact (expected for first run or if missing)"
          fi

      - name: Initialize patient cache if missing
        if: steps.download.outcome != 'success'
        run: |
          echo "No patient-cache artifact downloaded, creating empty patient_cache.json"
          echo '{"cache_date": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'", "patients": {}}' > patient_cache.json

      - name: Check for last_sync_state.json
        id: check_state
        run: |
          if [ -f last_sync_state.json ]; then
            echo "state_file_exists=true" >> $GITHUB_OUTPUT
          else
            echo "state_file_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug workspace files before sync
        run: |
          echo "## Workspace files before sync"
          find $GITHUB_WORKSPACE -type f
          if [ -f patient_cache.json ]; then
            echo "patient_cache.json contents:"
            cat patient_cache.json
          else
            echo "patient_cache.json not found"
          fi

      - name: Run sync
        id: sync
        env:
          OPEN_DENTAL_DEVELOPER_KEY: ${{ secrets.OPEN_DENTAL_DEVELOPER_KEY }}
          OPEN_DENTAL_CUSTOMER_KEY: ${{ secrets.OPEN_DENTAL_CUSTOMER_KEY }}
          KERAGON_WEBHOOK_URL: ${{ secrets.KERAGON_WEBHOOK_URL }}
          CLINIC_NUMS: "${{ secrets.CLINIC_NUM_1 }},${{ secrets.CLINIC_NUM_2 }}"
          LOG_LEVEL: "DEBUG"
          CLINIC_DELAY_SECONDS: "5.0"
          INCREMENTAL_SYNC_MINUTES: "15"
          DEEP_SYNC_HOURS: "720"
          SAFETY_OVERLAP_HOURS: "2"
          ENABLE_CACING: "true"
          CACHE_EXPIRY_MINUTES: "30"
          USE_SPECIFIC_FIELDS: "false"
          ENABLE_PAGINATION: "true"
          PAGE_SIZE: "100"
          MAX_RECORDS_PER_REQUEST: "100"
        run: |
          if [ "${{ steps.check_state.outputs.state_file_exists }}" == "false" ]; then
            echo "No last_sync_state.json found, running deep sync"
            python3 sync_script.py --force-deep-sync --verbose --once
          elif [[ "${{ github.event_name }}" == "schedule" && "${{ github.event.schedule }}" == "0 7 * * *" ]]; then
            echo "Running deep sync at 2 AM CDT"
            python3 sync_script.py --force-deep-sync --verbose --once
          else
            echo "Running incremental sync"
            python3 sync_script.py --verbose --once
          fi

      - name: Debug workspace files after sync
        if: always()
        run: |
          echo "## Workspace files after sync"
          find $GITHUB_WORKSPACE -type f
          if [ -f patient_cache.json ]; then
            echo "patient_cache.json contents:"
            cat patient_cache.json
          else
            echo "patient_cache.json not found"
            echo "Creating empty patient_cache.json to ensure upload"
            echo '{"cache_date": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'", "patients": {}}' > patient_cache.json
          fi

      - name: Upload patient cache
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: patient-cache
          path: patient_cache.json
          retention-days: 30
          if-no-files-found: warn
          compression-level: 6

      - name: Upload appointment types cache
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appointment-types-cache
          path: appointment_types_cache.json
          retention-days: 30
          if-no-files-found: warn

      - name: Commit and push state files
        if: steps.sync.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "GitHub Actions Bot"
          git config --local user.email "actions@github.com"
          # Only add files if they exist
          [ -f last_sync_state.json ] && git add last_sync_state.json
          [ -f sent_appointments.json ] && git add sent_appointments.json
          [ -f appointment_types_cache.json ] && git add appointment_types_cache.json
          [ -f appointment_cache.json ] && git add appointment_cache.json
          git diff --cached --quiet || (
            git commit -m "chore(sync): update sync state and caches [skip ci]" &&
            git push
          )